name: template-next14-init-deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  DOCKER_IMAGE: ghcr.io/ihartsykala/template-next14-init
  DOCKER_IMAGE_TAG: prod
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_USERNAME: ihartsykala

defaults:
  run:
    shell: bash

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: log in to gitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ env.GITHUB_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull Docker container if exists
        run: docker pull ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }} || true

      - name: Build, tag, and push image to registry
        id: build-image
        run: |
          docker build -f Dockerfile -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }} .
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_IMAGE_TAG }}

      - name: Set up SSH
        run: |
            mkdir -p $HOME/.ssh
            echo "$SSH_PRIVATE_KEY" > $HOME/.ssh/id_rsa
            chmod 600 $HOME/.ssh/id_rsa
            ssh-keyscan 165.22.0.137 >> $HOME/.ssh/known_hosts

      - name: Debug SSH Key
        run: cat $HOME/.ssh/id_rsa

      - name: Debug SSH Key (reveal)
        run: cat $HOME/.ssh/id_rsa
        env:
          ACTIONS_RUNNER_DEBUG: true

      - name: Debug SSH Key
        run: cat $HOME/.ssh/id_rsa

      - name: Debug known_hosts
        run: cat $HOME/.ssh/known_hosts

      - name: Test SSH Connection (without key)
        run: ssh -o StrictHostKeyChecking=no root@165.22.0.137 "echo Hello"

      - name: Deploy to Digital Ocean droplet via SSH
        uses: appleboy/ssh-action@v0.1.3
        with:
            host: 165.22.0.137
            username: root
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              cd /var/www/html
              docker system prune -f
              docker-compose pull
              docker-compose up -d

#      - name: Update deployment on the server
#        run: |
#          ssh root@165.22.0.137 "cd /var/www/html && docker system prune -f && docker-compose pull && docker-compose up -d"


